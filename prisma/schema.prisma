generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model organization {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description       String?  @db.VarChar(255)
  name              String   @db.VarChar(255)
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  user_id           String   @db.Uuid
  tenant_id         String   @db.VarChar(255)
  address           String?  @db.VarChar(255)
  contact_email     String?  @db.VarChar(255)
  organization_type String?  @db.VarChar(255)
  user              user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model performance_assessment {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  assessment_date  DateTime  @db.Timestamp(6)
  usage_frequency  Int
  average_duration Int
  average_distance Int
  vehicle_id       String    @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  total_revenue    Float?
  peak_usage_time  DateTime? @db.Timestamp(6)
  vehicle          vehicle   @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservation {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time DateTime @db.Timestamp(6)
  end_time   DateTime @db.Timestamp(6)
  user_id    String   @db.Uuid
  vehicle_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicle    vehicle  @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservations {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model usage_tracking {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date       DateTime @db.Timestamp(6)
  duration   Int
  distance   Int
  vehicle_id String   @db.Uuid
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicle    vehicle  @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  organization   organization[]
  reservation    reservation[]
  usage_tracking usage_tracking[]
}

model user_profiles {
  id                             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                     DateTime @default(now()) @db.Timestamp(6)
  updated_at                     DateTime @default(now()) @db.Timestamp(6)
  driver_license_expiration_date DateTime @db.Timestamp(6)
  driver_license_number          String   @db.VarChar(255)
}

model vehicle {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make                   String                   @db.VarChar(255)
  model                  String                   @db.VarChar(255)
  year                   Int
  color                  String                   @db.VarChar(255)
  mileage                Int
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  vehicle_condition      String?                  @db.VarChar(255)
  registration_number    String                   @db.VarChar(255)
  fuel_type              String?                  @db.VarChar(255)
  owner_id               Int?
  performance_assessment performance_assessment[]
  reservation            reservation[]
  usage_tracking         usage_tracking[]
  vehicle_information    vehicle_information[]
}

model vehicle_information {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime @default(now()) @db.Timestamp(6)
  updated_at          DateTime @default(now()) @db.Timestamp(6)
  maintenance_history String?
  vehicle_color       String?  @db.VarChar(255)
  model               String?  @db.Uuid
  vehicle             vehicle? @relation(fields: [model], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
